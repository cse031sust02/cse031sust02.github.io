<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on cse031sust02</title>
    <link>https://cse031sust02.github.io/post/index.xml</link>
    <description>Recent content in Posts on cse031sust02</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2017</copyright>
    <lastBuildDate>Mon, 10 Apr 2017 11:31:28 +0600</lastBuildDate>
    <atom:link href="https://cse031sust02.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>HTTP প্রোটোকল  এর বেসিক কাহিনী!</title>
      <link>https://cse031sust02.github.io/post/protocol-basics/</link>
      <pubDate>Mon, 10 Apr 2017 11:31:28 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/protocol-basics/</guid>
      <description>

&lt;hr /&gt;

&lt;h4 id=&#34;tcp-ip&#34;&gt;TCP/IP&lt;/h4&gt;

&lt;p&gt;TCP = Transmission Control Protocol&lt;/p&gt;

&lt;p&gt;IP = Internet Protocol&lt;/p&gt;

&lt;p&gt;TCP/IP হলো একটা Protocol Suite.&lt;/p&gt;

&lt;p&gt;TCP/IP = TCP + IP + more protocols ..&lt;/p&gt;

&lt;p&gt;WWW ( World Wide Web ) এ Browser গুলা Server এর সাথে connect করার জন্য TCP use করে।
HTTP, HTTPS, SMTP, FTP ইত্যাদি protocol গুলা তাদের কাজের জন্য  TCP কে use করে।&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;http-hypertext-transfer-protocol&#34;&gt;HTTP (HyperText Transfer Protocol)&lt;/h4&gt;

&lt;p&gt;HTTP হলো একটা request-response stateless protocol যার মাধ্যমে Client এবং Server পরস্পর Communicate করতে পারে।&lt;/p&gt;

&lt;p&gt;Client টা Server এর কাছে Request পাঠায় , Server সেইটার Response পাঠায়।&lt;/p&gt;

&lt;h6 id=&#34;request-message-এর-format&#34;&gt;Request Message এর Format&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;Request Line 
Request Header fields
Empty Line 
An Optional Message Body
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GET /index.html HTTP/1.1
Host : www.example.com 
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;GET হলো Method, index.html হলো Requested File, Http/1.1 হলো HTTP Version&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;response-message-এর-format&#34;&gt;Response Message এর Format&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;Status  Line 
Response Header Fields 
Empty Line 
An Optional Message Body
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;HTTP/1.1 200 OK 
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;HTTP/1.1 = HTTP Version, 200 = Status Code, OK = reason message&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Header fields এর সম্পর্কে জানতে &lt;a href=&#34;http://en.wikipedia.org/wiki/List_of_HTTP_header_fields&#34;&gt;Wikipedia&lt;/a&gt; তে দেখুন&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;সুতরাং , আমরা যখন ব্রাউজার এ &lt;code&gt;www.example.com/blog.php&lt;/code&gt; লিখে এন্টার করি,  ব্রাউজার (Client) টা Server কে আসলে এরকম একটা request করে,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GET  /blog.php HTTP/1.1 
Host : www.example.com 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;আর Server এর response টা এরকম,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;HTTP/1.0 200 OK
Date: Tue, 26 May 2015 23:59:59 GMT
Content-Type: text/html
Content-Length: 1202 

&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;h1&amp;gt;Blog&amp;lt;/h1&amp;gt;
  content goes here 
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;http-methods-verbs&#34;&gt;HTTP Methods/Verbs&lt;/h4&gt;

&lt;p&gt;Resource এ কি টাইপের action করতে চাই সেটা indicate করার জন্য কিছু method আছে ।
common method গুলা হলো  GET, POST, PUT, DELETE .&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;status-codes&#34;&gt;Status Codes&lt;/h4&gt;

&lt;p&gt;Informational : 1XX &amp;ndash; request recieve হইসে, process চলসে ।&lt;/p&gt;

&lt;p&gt;Successfull : 2XX &amp;ndash; client এর request succssfully receive করা হইসে।&lt;/p&gt;

&lt;p&gt;Redirectional : 3XX &amp;ndash; Client এর extra কিছু করতে হবে, mostly redirected ।&lt;/p&gt;

&lt;p&gt;Client Error : 4XX &amp;ndash; Client কোন error করছে ।&lt;/p&gt;

&lt;p&gt;Server Error : 5XX &amp;ndash; Server এ কোন সমস্যা আছে।&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;https-hypertext-transfer-protocol-secure&#34;&gt;HTTPS ( HyperText Transfer Protocol Secure )&lt;/h4&gt;

&lt;p&gt;HTTPS = HTTP + SSL (Secure Socket Layer)&lt;/p&gt;

&lt;p&gt;এটা HTTP এর উপরে একটা Layer (SSL/TLS Protocol) দিয়ে বানানো যেটা HTTP Communication এ কিছু secuirity যোগ করে।
এটার মেইন উদ্দেশ্য হলো Wiretapping আর Man-in-the-middle-attack থেকে protect করা।&lt;/p&gt;

&lt;p&gt;HTTPS এ Server ও Client গুলা  HTTP এর মতই communicate করে কিন্তু communication টা একটা Secure SSL connection এর উপরে হয় যেটা request এবং response টাকে encrypt/decrypt করে।&lt;/p&gt;

&lt;p&gt;SSL টার mainly ২ টা কাজ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;এইটা verify করা যে Client টা Directly Server এর সাথেই communicate করতেছে &lt;/li&gt;&lt;/li&gt;
&lt;li&gt;এইটা ensure করা যে client ও  server এর মধ্যকার কথাবার্তা শুধু client ও server ই পরতে পারতেছে&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTTPS এ header, message সবই encrypted থাকে।&lt;/p&gt;

&lt;p&gt;কোন site কে যদি আমরা HTTPS use করে secure করতে চাই তাহলে পুরা site টাকেই HTTPS এ host করতে হবে। এমন না যে কিছু page এ শুধু  করব।&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JSON</title>
      <link>https://cse031sust02.github.io/post/json/</link>
      <pubDate>Sun, 09 Apr 2017 18:15:22 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/json/</guid>
      <description>

&lt;hr /&gt;

&lt;h4 id=&#34;what-is-json&#34;&gt;What is JSON?&lt;/h4&gt;

&lt;p&gt;JSON stands for JavaScript Object Notation.&lt;/p&gt;

&lt;p&gt;Douglas Crockford originally specified the JSON format in the early 2000s. Altohugh it derives from JavaScript, but as of 2017 many programming languages include code to generate and parse JSON-format data.&lt;/p&gt;

&lt;p&gt;JSON filenames use the extension .json.&lt;/p&gt;

&lt;p&gt;The official internet media type for JSON is &amp;lsquo;application/json&amp;rsquo;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;why-use-json&#34;&gt;Why Use JSON?&lt;/h4&gt;

&lt;p&gt;Because It is&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;lightweight data-interchange format.&lt;/li&gt;
&lt;li&gt;language independent&lt;/li&gt;
&lt;li&gt;&amp;ldquo;self-describing&amp;rdquo; and easy to understand by both humans (to understand) and machines (to parse and generate).&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;usage&#34;&gt;USAGE?&lt;/h4&gt;

&lt;p&gt;JSON is heavily used in these areas : API, NoSQL, AJAX, Package Management (Composer, NPM, Bower etc)&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;why-better-than-xml&#34;&gt;Why better than XML?&lt;/h4&gt;

&lt;p&gt;JSON is faster and easier than XML. It is parsed very easily into a ready-to-use JavaScript object while XML is much more difficult to parse.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;data-structure-rules&#34;&gt;Data Structure &amp;amp; Rules&lt;/h4&gt;

&lt;p&gt;The JSON syntax is a subset of the JavaScript syntax.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data Structures&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;JSON is defined by two basic structures.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A collection of name/value pairs.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Different programming languages support this data structure in different names. Like object, record, struct, dictionary, hash table, keyed list, or associative array.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;e.g., &lt;code&gt;{ &amp;quot;name&amp;quot;: &amp;quot;John&amp;quot;, &amp;quot;age&amp;quot;:  30, &amp;quot;member&amp;quot;: false, &amp;quot;spouse&amp;quot;: { &amp;quot;firstName&amp;quot;: &amp;quot;Mary&amp;quot;, &amp;quot;lastName&amp;quot;: &amp;quot;Smith&amp;quot;} }&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ordered list of values.&lt;/p&gt;

&lt;p&gt;In various programming languages, it is called as array, vector, list, or sequence.
e.g., &lt;code&gt;[&amp;quot;John&amp;quot;,&amp;quot;Mary&amp;quot;,&amp;quot;Peter&amp;quot;,&amp;quot;Sally&amp;quot;]&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Syntax Rules&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Data is written as name/value pairs. &lt;code&gt;e.g., &amp;quot;name&amp;quot;:&amp;quot;John&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;note : &lt;em&gt;JSON names require double quotes. JavaScript object names don&amp;rsquo;t.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Data is seperated by commas. e.g., &lt;code&gt;&amp;quot;name&amp;quot;:&amp;quot;John&amp;quot;, &amp;quot;age&amp;quot;:30&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Curly braces hold objects.&lt;/p&gt;

&lt;p&gt;e.g.,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;John&amp;quot;,
  &amp;quot;age&amp;quot;: 30,
  &amp;quot;member&amp;quot;: false,
  &amp;quot;spouse&amp;quot;: { //object
    &amp;quot;first_name&amp;quot;: &amp;quot;Mary&amp;quot;,
    &amp;quot;last_name&amp;quot;: &amp;quot;Smith&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Square brackets hold arrays.&lt;/p&gt;

&lt;p&gt;e.g.,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;name&amp;quot;: &amp;quot;John&amp;quot;,
    &amp;quot;age&amp;quot;:  30,
    &amp;quot;member&amp;quot;: false,
    &amp;quot;phoneNumbers&amp;quot;: [ //array
        {
            &amp;quot;description&amp;quot;: &amp;quot;home&amp;quot;,
            &amp;quot;number&amp;quot;: &amp;quot;123-456-7890&amp;quot;
        },
        {
            &amp;quot;description&amp;quot;: &amp;quot;mobile&amp;quot;,
            &amp;quot;number&amp;quot;: &amp;quot;000-111-2222&amp;quot;
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Data Types&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Values must be one of the following data types.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;a string
sequence of zero or more Unicode characters.
e.g., &lt;code&gt;{ &amp;quot;name&amp;quot;:&amp;quot;John&amp;quot; }&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;a number
Integer, Fraction and Exponent.
e.g., &lt;code&gt;{ &amp;quot;age&amp;quot;:30 }&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;an object (JSON object)
starts and ends with &amp;lsquo;{&amp;rsquo; and &amp;lsquo;}&amp;rsquo;. a number of string value pairs can reside between.
Keys must be strings, and values must be a valid JSON data type.
e.g.,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
&amp;quot;employee&amp;quot;:{ &amp;quot;name&amp;quot;:&amp;quot;John&amp;quot;, &amp;quot;age&amp;quot;:30, &amp;quot;city&amp;quot;:&amp;quot;New York&amp;quot; }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;an array
starts and ends with &amp;lsquo;[&amp;rsquo; and &amp;lsquo;]&amp;rsquo;. a number of values can reside between.
e.g.,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
&amp;quot;employees&amp;quot;:[ &amp;quot;John&amp;quot;, &amp;quot;Anna&amp;quot;, &amp;quot;Peter&amp;quot; ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;a boolean
true or false. (TRUE or FALSE is not acceptable!).
e.g., &lt;code&gt;{ &amp;quot;accept&amp;quot;:true }&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;null
null (NULL is not acceptable).
e.g., &lt;code&gt;{ &amp;quot;coupon&amp;quot;:null }&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;JSON values cannot be a function, a date or undefined. (In JavaScript you can have these values)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Blogging with Hugo</title>
      <link>https://cse031sust02.github.io/post/blogging-with-hugo/</link>
      <pubDate>Sun, 09 Apr 2017 16:31:49 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/blogging-with-hugo/</guid>
      <description>

&lt;hr /&gt;

&lt;h4 id=&#34;install-hugo&#34;&gt;Install Hugo&lt;/h4&gt;

&lt;p&gt;To install Hugo in your operating system, please visit the &lt;a href=&#34;http://gohugo.io/overview/installing/&#34;&gt;official guide&lt;/a&gt;. As I am using ubuntu, installing Hugo is as simple as
   &lt;code&gt;sudo apt install hugo&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h4&gt;

&lt;p&gt;Hugo allows us to scaffold a website quickly and easily.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;create new site&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site blog
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Choose a theme&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Download a theme from &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;https://themes.gohugo.io/&lt;/a&gt; and put in &amp;lsquo;theme&amp;rsquo; folder&lt;/p&gt;

&lt;p&gt;for example, in order to install the &lt;a href=&#34;http://themes.gohugo.io/theme/casper/&#34;&gt;casper&lt;/a&gt; theme,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;blog$ mkdir themes
blog$ cd themes
blog/themese$ git clone https://github.com/vjeantet/hugo-theme-casper casper
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;configuration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;update your configuration in config.toml&lt;/p&gt;

&lt;p&gt;for example,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;languageCode = &amp;quot;en-us&amp;quot;
title = &amp;quot;My New Hugo Site&amp;quot;
baseURL = &amp;quot;http://example.org/&amp;quot;

[params]
description = &amp;quot;YOUR DESCRIPTION GOES HERE&amp;quot;
author = &amp;quot;YOUR NAME&amp;quot;
authorlocation = &amp;quot;YOUR LOCATION&amp;quot;
authorwebsite = &amp;quot;YOUR SITE&amp;quot;
bio= &amp;quot;YOUR BIO&amp;quot;

[[menu.main]]
name = &amp;quot;Blog&amp;quot;
weight = -120
identifier = &amp;quot;blog&amp;quot;
url = &amp;quot;/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;create new post&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new post/hello-world.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now put content inside the newly created hello-world.md file,&lt;/p&gt;

&lt;p&gt;for example,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+++
date = &amp;quot;2016-04-17T16:12:50+06:30&amp;quot;
title = &amp;quot;Hello world&amp;quot;

+++

Hello World. This is my first post.
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Serve content&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server -t YOURTHEME
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As i am using casper theme,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server -t casper
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can view your blog at &lt;a href=&#34;http://localhost:1313/&#34;&gt;http://localhost:1313/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;for more details, pleaes visit the &lt;a href=&#34;http://gohugo.io/overview/quickstart/&#34;&gt;official doc&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;deploy-to-github-page&#34;&gt;Deploy to Github page&lt;/h4&gt;

&lt;p&gt;Full details on how to host your Hugo based website on github page can be found here &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog&#34;&gt;https://gohugo.io/tutorials/github-pages-blog&lt;/a&gt;. But if you are a newbie like me, it may will look much complex at first time. So, here are some easy steps&amp;hellip;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Create &lt;code&gt;(your-project)-hugo&lt;/code&gt; repository&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;for example, create a new repository in Github named &lt;code&gt;hugo-blog&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, in your terminal, initialize a new git repo.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;blog$ git init
blog$ git remote add origin https://github.com/YOURUSERNAME/hugo-blog.git
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Create &lt;code&gt;(your-username).github.io&lt;/code&gt; repository&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;for example, in my case it is &lt;code&gt;cse031sust02.github.io&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;now, add a submodule with the public folder&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;blog$ git submodule add https://github.com/YOUR-USERNAME/YOUR-USERNAME.github.io.git public
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Push Everything to Github&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;blog$ git add .
blog$ git commit -am &#39;push everything&#39;
blog$ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Deploy&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;blog$ hugo -t casper
blog$ cd public
blog$ git add .
blog/public$ commit -m &amp;quot;deploy&amp;quot;
blog/public$ push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then you should visit the blog at https://(YOUR-USERNAME).github.com. For example, my site is at &lt;a href=&#34;https://cse031sust02.github.com&#34;&gt;https://cse031sust02.github.com&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>hello world</title>
      <link>https://cse031sust02.github.io/post/hello-world/</link>
      <pubDate>Sun, 09 Apr 2017 15:36:30 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/hello-world/</guid>
      <description>&lt;p&gt;Hello World. This is my first post.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>