<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mongodb on cse031sust02</title>
    <link>https://cse031sust02.github.io/tags/mongodb/</link>
    <description>Recent content in Mongodb on cse031sust02</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Dec 2019 10:05:22 +0600</lastBuildDate>
    
	<atom:link href="https://cse031sust02.github.io/tags/mongodb/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My notes about the basics of MongoDB</title>
      <link>https://cse031sust02.github.io/post/getting-started-with-mongodb/</link>
      <pubDate>Tue, 10 Dec 2019 10:05:22 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/getting-started-with-mongodb/</guid>
      <description>Intro MongoDB is a document-oriented NoSQL database. It is one of the most powerful NoSQL systems and databases around, today.
Key Features : Here is the key features of MongoDB :
 MongoDB is free to use. MongoDB stores data in flexible, JSON-like documents, meaning fields can vary from document to document and data structure can be changed over time The document model maps to the objects in your application code, making data easy to work with Ad hoc queries, indexing, and real time aggregation provide powerful ways to access and analyze your data MongoDB is a distributed database at its core, so high availability, horizontal scaling, and geographic distribution are built in and easy to use  src : MongoDB Website</description>
    </item>
    
    <item>
      <title>Backup and Restore MongoDB Databases</title>
      <link>https://cse031sust02.github.io/post/backup-and-restore-in-mongodb/</link>
      <pubDate>Thu, 05 Sep 2019 01:29:14 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/backup-and-restore-in-mongodb/</guid>
      <description>MongoDB comes with two commands that allow us to quickly backupand restore to our running MongoDB instances. In order to take backups, we can use the mongodump command which creates BSON dump files. And to restore those dump, we can use the mongorestore command.
Taking Backups - all databases $ mongodump  - single database $ mongodump --db &amp;lt;DATABASE&amp;gt;  - single collection $ mongodump --db &amp;lt;DATABASE&amp;gt; --collection &amp;lt;COLLECTION&amp;gt;  - from remote host $ mongodump --host &amp;lt;HOST&amp;gt;:&amp;lt;PORT&amp;gt; --username &amp;lt;USERNAME&amp;gt; --password &amp;lt;USERNAME&amp;gt; --db &amp;lt;DATABASE&amp;gt;  - using uri $ mongodump --uri=&amp;quot;&amp;lt;CONNECTION STRING&amp;gt;&amp;quot;  *if your local mongodump is having lower version than remote mongodb and the above command does not work, try adding the --forceTableScan option.</description>
    </item>
    
  </channel>
</rss>