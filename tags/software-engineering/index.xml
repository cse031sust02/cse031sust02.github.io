<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software Engineering on cse031sust02</title>
    <link>https://cse031sust02.github.io/tags/software-engineering/index.xml</link>
    <description>Recent content in Software Engineering on cse031sust02</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2017 cse031sust02 | &lt;a href=&#34;https://github.com/mgjohansen/hucore.git&#34; target=&#34;_blank&#34;&gt;Hucore theme&lt;/a&gt; &amp; &lt;a href=&#34;http://gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt; â™¥</copyright>
    <atom:link href="https://cse031sust02.github.io/tags/software-engineering/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Use Case Diagram</title>
      <link>https://cse031sust02.github.io/post/use-case-diagram/</link>
      <pubDate>Thu, 16 Nov 2017 18:37:12 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/use-case-diagram/</guid>
      <description>

&lt;hr /&gt;

&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;

&lt;p&gt;Use Case Diagrams are used to visualize different types of users in a system and how those users interact with the system. It provides a higher-level view of the system.&lt;/p&gt;

&lt;p&gt;A single use case diagram captures a particular functionality of a system. So to model the entire system, a few major use cases are used. A Use case diagram should not go deep into the details of use cases rather it should be easily understood by any non-technical person. To describe any use case in detail, we can link the use case to another diagrams (such as activity diagram or sequence diagram).&lt;/p&gt;

&lt;h3 id=&#34;use-case-diagram-objects&#34;&gt;Use Case Diagram objects&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Use cases&lt;/strong&gt; : A function or an action within the system. i.e, order a meal.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Actors&lt;/strong&gt; : Users that interact with the system. It can be a person, an organization, or an outside system. i.e, customer, restaurent.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;System&lt;/strong&gt; : Whatever we are developing. it might be the enitre application or any particualr functionality. i.e, meal delivery system.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;relationships&#34;&gt;Relationships&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Association&lt;/strong&gt; : Association indicates that an actor takes part in a use case. i.e, Customer Orders a Meal.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Generalization&lt;/strong&gt; : &amp;hellip;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Include relationship&lt;/strong&gt; : Include relation shows how a use case breaks into smaller use cases. An &lt;em&gt;included&lt;/em&gt; use case is a step that the actor might have to perform to achieve the overall goal of the &lt;em&gt;including&lt;/em&gt; use case. An included use case can be shared by multiple use cases. i.e, &amp;lsquo;Order a Meal&amp;rsquo; and &amp;lsquo;Book a Restaurent&amp;rsquo; both use cases may include an included use case called &amp;lsquo;Pay&amp;rsquo;. &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/dd409432.aspx#Include&#34;&gt;more details&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Extend relationship&lt;/strong&gt; : One use case may add functionality to another use case under certain circumstances. &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/dd409432.aspx#Extend&#34;&gt;more details&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;how-to-draw&#34;&gt;How to Draw&lt;/h3&gt;

&lt;p&gt;We should first identify actors, use cases and their relationships(both include &amp;amp; extend). and then we will start drawing the diagram&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Actors are represented by stick figures.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Use cases are represented by ovals.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Assosiations are represented by a line between the actor and use case.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Include relations are represented by dotted line with an arrow between the including use case and included user case. The arrow should point at &lt;em&gt;included&lt;/em&gt; use case.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Extended realations are represented by a line with an arrow between the use cases. The arrow should point at the main use case.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;example&#34;&gt;Example&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://i-msdn.sec.s-msft.com/dynimg/IC313333.jpeg&#34; alt=&#34;Use Case Diagram&#34; title=&#34;Use Case Diagram&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;source : &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/dd409427.aspx&#34;&gt;msdn&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>