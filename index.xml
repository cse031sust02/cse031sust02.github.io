<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cse031sust02</title>
    <link>https://cse031sust02.github.io/</link>
    <description>Recent content on cse031sust02</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Sep 2019 01:29:14 +0600</lastBuildDate>
    
	<atom:link href="https://cse031sust02.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Backup and Restore MongoDB Databases</title>
      <link>https://cse031sust02.github.io/post/backup-and-restore-in-mongodb/</link>
      <pubDate>Thu, 05 Sep 2019 01:29:14 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/backup-and-restore-in-mongodb/</guid>
      <description>MongoDB comes with two commands that allow us to quickly backupand restore to our running MongoDB instances. In order to take backups, we can use the mongodump command which creates BSON dump files. And to restore those dump, we can use the mongorestore command.
Taking Backups - all databases $ mongodump  - single database $ mongodump --db &amp;lt;DATABASE&amp;gt;  - single collection $ mongodump --db &amp;lt;DATABASE&amp;gt; --collection &amp;lt;COLLECTION&amp;gt;  - from remote host $ mongodump --host &amp;lt;HOST&amp;gt;:&amp;lt;PORT&amp;gt; --username &amp;lt;USERNAME&amp;gt; --password &amp;lt;USERNAME&amp;gt; --db &amp;lt;DATABASE&amp;gt;   we can also use -d instead of --db, and -c instead of --collection</description>
    </item>
    
    <item>
      <title>AWS IAM in Plain English</title>
      <link>https://cse031sust02.github.io/post/aws-iam-in-plain-english/</link>
      <pubDate>Thu, 29 Aug 2019 14:29:14 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/aws-iam-in-plain-english/</guid>
      <description>Intro AWS Identity and Access Management (IAM) is a web service that helps us securely control access to AWS resources. We can control authentication (who can signed in) and authorization (who has permissions to use resources) using IAM. When we create an AWS account, we get a root user which has complete access to all AWS services and resources in the account. It is recommended that we do not use the root account regularly, instead we should create IAM users to access the AWS services and resources frequently.</description>
    </item>
    
    <item>
      <title>A step-by-step technical guide for open source contribution</title>
      <link>https://cse031sust02.github.io/post/open-source-contribution-steps/</link>
      <pubDate>Thu, 27 Sep 2018 11:36:51 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/open-source-contribution-steps/</guid>
      <description>Intro This is a very simple guide for first-timers to making open source contributions. I guess that you already have a GitHub account and know basic git commands.
Steps for Contributing Fork First, we need to choose a project we want to contribute. Then we will fork the project to our github account.
Clone Now, we need to clone the project to our machine from our fork.
$ git clone &amp;lt;url&amp;gt;  Syncing the fork We should keep our fork up-to-date with the main(aka upstream) repository.</description>
    </item>
    
    <item>
      <title>Configure phpMyAdmin to access multiple servers</title>
      <link>https://cse031sust02.github.io/post/configure-phpmyadmin-to-access-multiple-servers/</link>
      <pubDate>Mon, 19 Feb 2018 14:45:53 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/configure-phpmyadmin-to-access-multiple-servers/</guid>
      <description>By default, phpMyAdmin allows us to connect to local MySQL server only. But we may need to access multiple database servers from our single phpMyAdmin. It&amp;rsquo;s such an easy job. For each new server, we will just need to create a new config file (with .php extension) in /etc/phpmyadmin/conf.d directory.
lets create a new server
sudo nano /etc/phpmyadmin/conf.d/second-server.php  &amp;lt;?php $cfg[&#39;Servers&#39;][2][&#39;verbose&#39;] = &#39;Database Server #2&#39;; $cfg[&#39;Servers&#39;][2][&#39;host&#39;] = &#39;DB_HOST&#39;; $cfg[&#39;Servers&#39;][2][&#39;user&#39;] = &#39;DB_USERNAME&#39;; $cfg[&#39;Servers&#39;][2][&#39;password&#39;] = &#39;DB_PASSWORD&#39;;  That&amp;rsquo;s it!</description>
    </item>
    
    <item>
      <title>Database Normalization</title>
      <link>https://cse031sust02.github.io/post/database-normalization/</link>
      <pubDate>Tue, 30 Jan 2018 11:50:23 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/database-normalization/</guid>
      <description>Intro Database normalization is the process of organizing a relational database to reduce data redundancy (duplicate data) and improve data integrity. The concept of Normalization was introduced by Edgar F. Codd.
Normalization is part of a successful database design. It makes a Relation or Table free from insert/update/delete anomalies and saves space by removing duplicate data.
Normal Forms : Theory of Data Normalization is still being developed further. There are discussions even on 6th Normal Form.</description>
    </item>
    
    <item>
      <title>Send notifications using Firebase</title>
      <link>https://cse031sust02.github.io/post/send-notifications-using-firebase/</link>
      <pubDate>Tue, 23 Jan 2018 11:21:11 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/send-notifications-using-firebase/</guid>
      <description>What is Firebase? Firebase is a very popular platform for developing mobile and web application. Firebase provides many services of different categories such as : analytics, authentication, app performance reports, cloud hosting etc. To view the list of all products with details, please check this page.
Firebase Cloud Messaging (FCM) Firebase Cloud Messaging(FCM) (Formerly known as Google Cloud Messaging or GCM) is a cross-platform messaging solution that lets us reliably deliver and receive messages and notifications on Android, iOS and the Web at no cost.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://cse031sust02.github.io/about/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cse031sust02.github.io/about/</guid>
      <description>This blog is a note to self thing. As i learn new stuffs, i try to write things down here so that can remember those when i have to.</description>
    </item>
    
    <item>
      <title>Use Case Diagram</title>
      <link>https://cse031sust02.github.io/post/use-case-diagram/</link>
      <pubDate>Thu, 16 Nov 2017 18:37:12 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/use-case-diagram/</guid>
      <description>Intro Use Case Diagrams are used to visualize different types of users in a system and how those users interact with the system. It provides a higher-level view of the system.
A single use case diagram captures a particular functionality of a system. So to model the entire system, a few major use cases are used. A Use case diagram should not go deep into the details of use cases rather it should be easily understood by any non-technical person.</description>
    </item>
    
    <item>
      <title>Design &amp; Document your APIs with Swagger</title>
      <link>https://cse031sust02.github.io/post/document-your-api-with-swagger/</link>
      <pubDate>Thu, 12 Oct 2017 16:57:51 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/document-your-api-with-swagger/</guid>
      <description>What is Swagger? Swagger is a very popular framework for describing RESTful APIs using a common language that everyone can understand. It is actually a set of open-source tools for designing, building, documenting and consuming REST APIs.
Swagger Specification? The Swagger Specification (currently known as the OpenAPI specification) is a powerful definition format to describe RESTful APIs. The specification creates a RESTful interface for easily developing and consuming an API by effectively mapping all the resources and operations associated with it.</description>
    </item>
    
    <item>
      <title>Understanding the Nginx Server Block</title>
      <link>https://cse031sust02.github.io/post/understanding-nginx-server-block/</link>
      <pubDate>Tue, 19 Sep 2017 16:54:45 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/understanding-nginx-server-block/</guid>
      <description>We can think of Server Blocks as specifications for individual web sites. Server blocks are the NGINX equivalent of Apache&amp;rsquo;s virtual hosts. So in order to host our websites on Nginx server, we need to understand the directives and settings that make up the server block.
Here is a sample server block configuration :
server { listen 80; server_name _; location / { root /usr/share/nginx/html; index index.html index.htm; } error_page 404 /404.</description>
    </item>
    
    <item>
      <title>Getting started with AWS</title>
      <link>https://cse031sust02.github.io/post/getting-started-with-aws/</link>
      <pubDate>Tue, 12 Sep 2017 16:05:22 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/getting-started-with-aws/</guid>
      <description>What is AWS? Amazon Web Services (AWS) is a secure cloud services platform. It provides a broad set of infrastructure services, such as computing power, storage options, networking and databases. Millions of customers use AWS cloud products and solutions to build sophisticated applications.
source : https://aws.amazon.com/what-is-aws/
Getting Started Create a New Account Go to https://portal.aws.amazon.com/billing/signup#
Get Hands On These 10-Minute Tutorials are simple “Hello, World!” technical documents to help you get hands-on with AWS.</description>
    </item>
    
    <item>
      <title>How I learned to stop panicking and play with NGINX</title>
      <link>https://cse031sust02.github.io/post/getting-started-with-nginx/</link>
      <pubDate>Sun, 20 Aug 2017 17:18:51 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/getting-started-with-nginx/</guid>
      <description>What is Nginx Nginx is a high performance web server which is lightweight, free and open-source. It can be used as a standalone web server (like Apache) or as a reverse proxy (serve in front of the web servers). Nginx is also used as mail proxy server, load balancer and HTTP cache.
Why use Nginx? There are other web servers such as Apache, IIS etc. So what makes Nginx special?</description>
    </item>
    
    <item>
      <title>Introduction to Websocket</title>
      <link>https://cse031sust02.github.io/post/intro-to-websocket/</link>
      <pubDate>Wed, 09 Aug 2017 11:27:15 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/intro-to-websocket/</guid>
      <description>Intro WebSocket is a protocol (like HTTP) which defines how two parties can communicate. It is a technique for two-way communication over one (TCP) socket.
A very good intro is written in this post
How It Works WebSockets provide a persistent connection between a client and server.
Once a WebSocket connection is established the connection stays open until the client or server decides to close this connection. With this open connection, the client or server can send messages to each other at any given time.</description>
    </item>
    
    <item>
      <title>Data Structure Basics</title>
      <link>https://cse031sust02.github.io/post/data-structure-basics/</link>
      <pubDate>Tue, 08 Aug 2017 17:46:18 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/data-structure-basics/</guid>
      <description>What is Data Structure? Data structures are ways to store data in an organized fashion so that it can be used efficiently. Just like there are many ways (i.e alphabetically or by genre) you can organize your books in a bookshelf.
Types  Linear : Array, Linked List, Stack, Queue etc Non Linear : Tree, Graph etc  Operations We can do different types of operations on different data structures.</description>
    </item>
    
    <item>
      <title>Installing LEMP stack on ubuntu 14.04</title>
      <link>https://cse031sust02.github.io/post/installing-lemp-ubuntu-14/</link>
      <pubDate>Tue, 20 Jun 2017 16:21:21 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/installing-lemp-ubuntu-14/</guid>
      <description>What is LEMP stack? LEMP stands for Linux, nginx (pronounced engine-x), MySQL, and PHP. It is actually a variation of the LAMP stack where Apache is replaced with nginx.
Setup So, We are going to setup LEMP stack on our ubuntu 14.04 machine.
Step 1 : Update Apt-Get Update the package database. To know more about apt-get, please visit this page.
sudo apt-get update  Step 2 : Install nginx Installing nginx is very easy as Ubuntu provides nginx package in its default repositories.</description>
    </item>
    
    <item>
      <title>Getting Started with Linux Command Line</title>
      <link>https://cse031sust02.github.io/post/linux-cheatsheet/</link>
      <pubDate>Wed, 17 May 2017 15:50:31 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/linux-cheatsheet/</guid>
      <description>What is Linux? Just like Windows and Mac OS X, Linux is an operating system. It is an open source Unix-like operating system.
Although Linux is generally used to refer to the entire OS, Linux is basically the name of the Kernel which was developed by Linus Torvalds. I think this answer explains it all.
Linux Commands We should have some basic ideas of Shell, Bash and Terminal first if we want to work with Linux Command Line.</description>
    </item>
    
    <item>
      <title>Say &#39;Hello&#39; to Node.js</title>
      <link>https://cse031sust02.github.io/post/say_hello_to_nodejs/</link>
      <pubDate>Sun, 07 May 2017 16:21:40 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/say_hello_to_nodejs/</guid>
      <description>What is Node.js? :  Node.js® is a JavaScript runtime built on Chrome&amp;rsquo;s V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js&amp;rsquo; package ecosystem, npm, is the largest ecosystem of open source libraries in the world. - Official Website
Creepy, huh?
 npm? npm is the Node.js package manager. It allows us to easily install modules and packages to use with Node.</description>
    </item>
    
    <item>
      <title>Getting Started with Composer</title>
      <link>https://cse031sust02.github.io/post/getting_started_with_composer/</link>
      <pubDate>Sun, 23 Apr 2017 17:37:13 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/getting_started_with_composer/</guid>
      <description>What is Composer?  Composer is a tool for dependency management in PHP. It allows you to declare the libraries your project depends on and it will manage (install/update) them for you.
source : getcomposer.org
 Why Use Composer? Suppose, we want to use a mail library for our PHP project, let&amp;rsquo;s say PHPMailer. We would normally download the PHPMailer library and put it on our project&amp;rsquo;s folder. But, PHPMailer depends on some other libraries too.</description>
    </item>
    
    <item>
      <title>So you want to start using Redis?</title>
      <link>https://cse031sust02.github.io/post/intro-to-redis/</link>
      <pubDate>Sat, 22 Apr 2017 16:13:16 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/intro-to-redis/</guid>
      <description>What is Redis? Redis is an in-memory data structure server. Which can be used as database, cache and message broker.
Redis = REmote DIctionary Server.
 a key-value store is commonly known today as a dictionary. https://en.wikipedia.org/wiki/Key-value_database
 # Data Structure Server Data Structure is a particular way of organizing data. Redis is a data structure server. An important difference between Redis and other structured storage systems is that Redis supports not only strings, but also abstract data types.</description>
    </item>
    
    <item>
      <title>Database &amp; ACID properties</title>
      <link>https://cse031sust02.github.io/post/database-acid/</link>
      <pubDate>Tue, 11 Apr 2017 11:13:09 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/database-acid/</guid>
      <description>What is Database? : A database is a collection of data that is stored in an organized manner.
 the term &amp;ldquo;database&amp;rdquo; is often used casually to refer to both a database and the DBMS used to manipulate it.
 Database Models : A database model refers to the logical structure, representation or layout of a database and how the data will be stored, managed and processed within it.</description>
    </item>
    
    <item>
      <title>My Personal Git Cheat Sheet</title>
      <link>https://cse031sust02.github.io/post/git-cheatsheet/</link>
      <pubDate>Tue, 11 Apr 2017 11:11:48 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/git-cheatsheet/</guid>
      <description>What is GIT? Git is a free and open source distributed version control system.
Why we use VCS (version control system)?
 Code Revision Like a Time Machine Multiple Developer  Why GIT (among other VCS)?
 Can work locally without any central server  Setup Now let&amp;rsquo;s install Git on our machine and start using it.
Installation Please follow the offical doc to install git.
Configuration Use git config command to get and set configuration variables</description>
    </item>
    
    <item>
      <title>Introduction to Cookie</title>
      <link>https://cse031sust02.github.io/post/intro-to-cookie/</link>
      <pubDate>Tue, 11 Apr 2017 11:11:22 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/intro-to-cookie/</guid>
      <description>What is a HTTP Cookie? Cookies are small files that is sent from a website(server) and stored on users&amp;rsquo;s computer by a browser.
It is also called web cookie, Internet cookie, browser cookie or simply cookie.
Usage Cookies are mainly used for these purposes
 Session management (user logins, shopping carts) Personalization (user preferences) Tracking (analyzing user behavior)   source : MDN
How server/client sends cookie? Server to Browser The server tells the client (Browser) to store a cookie using the Set-Cookie HTTP header.</description>
    </item>
    
    <item>
      <title>Exception Handling with PHP</title>
      <link>https://cse031sust02.github.io/post/exception-handling-with-php/</link>
      <pubDate>Mon, 10 Apr 2017 15:56:44 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/exception-handling-with-php/</guid>
      <description>What is Exception Exception is an error condition which change the normal flow of code execution. Exceptions are catchable. That means, we can catch and try to recover or continue with the execution of the program.
&amp;lsquo;errors&amp;rsquo; vs &amp;lsquo;exceptions&amp;rsquo; : Generally errors occur at the language level (ie, the syntax is wrong, missing parenthesis etc)
Exceptions in PHP Exceptions were introduced in PHP 5. It is used in an object oriented way.</description>
    </item>
    
    <item>
      <title>Accepting payments on your site using Stripe</title>
      <link>https://cse031sust02.github.io/post/payment-using-stripe/</link>
      <pubDate>Mon, 10 Apr 2017 15:27:28 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/payment-using-stripe/</guid>
      <description>What is Stripe A popular payment processor. It accepts payments from customers around the world on web or in mobile apps.
Payment types Stripe accepts all major debit and credit cards in 100+ currencies. It also supports bank and direct debit payments, local payment wallets, Alipay and cryptocurrency (Bitcoin) etc.
Accepting Payments with Cards Using card information with Stripe is a two-step process
 Securely collect payment information using tokenization Use the payment information in a charge request or save it for later  Step 1.</description>
    </item>
    
    <item>
      <title>HTTP প্রোটোকল  এর বেসিক কাহিনী!</title>
      <link>https://cse031sust02.github.io/post/protocol-basics/</link>
      <pubDate>Mon, 10 Apr 2017 11:31:28 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/protocol-basics/</guid>
      <description>TCP/IP TCP = Transmission Control Protocol
IP = Internet Protocol
TCP/IP হলো একটা Protocol Suite.
TCP/IP = TCP + IP + more protocols ..
WWW ( World Wide Web ) এ Browser গুলা Server এর সাথে connect করার জন্য TCP use করে। HTTP, HTTPS, SMTP, FTP ইত্যাদি protocol গুলা তাদের কাজের জন্য TCP কে use করে।
HTTP (HyperText Transfer Protocol) HTTP হলো একটা request-response stateless protocol যার মাধ্যমে Client এবং Server পরস্পর Communicate করতে পারে।</description>
    </item>
    
    <item>
      <title>JSON</title>
      <link>https://cse031sust02.github.io/post/json/</link>
      <pubDate>Sun, 09 Apr 2017 18:15:22 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/json/</guid>
      <description>What is JSON? JSON stands for JavaScript Object Notation.
Douglas Crockford originally specified the JSON format in the early 2000s. Altohugh it derives from JavaScript, but as of 2017 many programming languages include code to generate and parse JSON-format data.
JSON filenames use the extension .json.
The official internet media type for JSON is &amp;lsquo;application/json&amp;rsquo;
Why use JSON? Because It is
 lightweight data-interchange format. language independent &amp;ldquo;self-describing&amp;rdquo; and easy to understand by both humans (to understand) and machines (to parse and generate).</description>
    </item>
    
    <item>
      <title>Blogging with Hugo</title>
      <link>https://cse031sust02.github.io/post/blogging-with-hugo/</link>
      <pubDate>Sun, 09 Apr 2017 16:31:49 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/blogging-with-hugo/</guid>
      <description>Install Hugo To install Hugo in your operating system, please visit the official guide. As I am using ubuntu, installing Hugo is as simple as sudo apt install hugo
Getting Started Hugo allows us to scaffold a website quickly and easily.
create new site $ hugo new site blog  Choose a theme Download a theme from https://themes.gohugo.io/ and put in &amp;lsquo;theme&amp;rsquo; folder
for example, in order to install the casper theme,</description>
    </item>
    
    <item>
      <title>hello world</title>
      <link>https://cse031sust02.github.io/post/hello-world/</link>
      <pubDate>Sun, 09 Apr 2017 15:36:30 +0600</pubDate>
      
      <guid>https://cse031sust02.github.io/post/hello-world/</guid>
      <description>Hello World. This is my first post.</description>
    </item>
    
  </channel>
</rss>